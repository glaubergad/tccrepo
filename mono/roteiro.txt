Boa noite a todos os presentes, meus cumprimentos aos componentes da banca de avaliação.

	Meu nome é Glauber Gadelha e o meu Orientador foi o Professor Mestre Cláudio Roberto de Lima Martins.
	
	O título deste trabalho de conclusão de curso é: DashGen: Gerador de quadros de apresentação de dados em formato de dashboards. 
	
	A pesquisa partiu do seguinte problema: Quadros de exibição de informações em formato de gráficos, usualmente conhecidos como Dashboards, facilitam o entendimento de conjuntos de dados volumosos. Porém, mesmo usando novas bibliotecas e APIs, ainda é bastante trabalhoso produzir um a um esses painéis, exigindo conhecimento de programação e muitas linhas de código. 

	Para propor uma solução, o escopo desse trabalho foi delimitado em desenvolver uma aplicação em Java 8 para desktops com interface gráfica, com reuso de software e programação generativa orientada a gabaritos ou templates, que facilitasse a criação de painéis de informações em formato de gráficos  gerados a partir de dados contidos em um arquivo CSV (Escolhido por ser um formato aberto e bastante utilizado). 

       A aplicação deve permitir a seleção de atributos contidos no arquivo a serem usados como dimensões e atribuídos a três tipos de gráficos: Tipo Pizza ou PieChart, tipo Barras horizontais ou RowChart, e tipo linha ou lineChart, dando também a opção do usuário selecionar entre dois tipos de redução: por contagem de incidências do atributo ou pela somatória de valores de um segundo atributo com valores numéricos.
 
        A revisão da literatura direcionou a pesquisa para o campo de engenharia de software baseada em reuso, com análise das vantagens e desvantagens de se aplicar reúso de artefatos prontos, testados e validados. Dentro deste campo, o foco da pesquisa passou a ser a geradores de programas (programação generativa) e foi considerada adequada para o desenvolvimento do DashGen a abordagem da geração de artefatos baseada em gabaritos (templates).

        Programação generativa baseada em gabaritos consiste em utilizar-se processadores de gabaritos, que consistem componentes de software com a função de combinar gabaritos a um dado modelo de dados, gerando artefatos de saída como resultado deste processamento.
      
	Ao longo da pesquisa, foram destacadas duas opções de motores para processamento de gabaritos em aplicações Java: O Apache Velocity, bastante popular mas à data da pesquisa com o projeto passando por um período sem evoluções e melhorias e o Apache FreeMarker, com atualizações mais frequentes e também bastante utilizado e requisitado no repositório central do gerenciador de dependências Maven. A pesquisa findou por destacar o Apache FreeMarker como a solução ideal para o projeto do DashGen. 

	Levando em conta que era desejável reusar ferramentas já desenvolvidas e validadas para manipulação de arquivos em formato CSV, cópia de arquivos de dependência para o dashboard e por fim a compactação dos artefatos finalizados em um arquivo ZIP, foram também adicionadas ao projeto as bibliotecas Apache Commons CSV (TRATAMENTO DE ARQUIVOS CSV) e Commons IO (FACILITA LEITURA E ESCRITA DE ARQUIVOS EM DISCO) e a biblioteca ZT-ZIP (COMPACTAR ARQUIVOS OU DIRETORIOS RECURSIVAMENTE). Para o artefato final do Dashboard foi utilizada a biblioteca DC.js e suas dependências (Crossfilter e D3).

    Na  fase de análise e modelagem foram percorridas as  etapas consideradas necessárias para o tamanho da aplicação:

-Análise de Requisitos: especificação dos requisitos funcionais e não funcionais do DashGen. 

-Análise de casos de uso: Definido o caso de uso e especificada a descrição passo a passo

-Diagrama de classes de análise, que trouxe a luz algumas das necessidades do domínio, ainda sem se ater à tecnologia a  ser utilizada. 

-Diagrama de  classes de  implementação: Aí sim com as classes definidas em Java

-Diagramas de sequência geral e o de sequência do motor de composição dos gabaritos. 


Fase de implementação:

- A interface gráfica, desenhada em JavaFX 8, Foi desenvolvida com uma única tela, onde o usuário insere os dados do CSV, Diretório de destino,titulo do dashboard e os atributos desejados, aasociados ao tipo de gráfico e tipo de redução. (Slide com a interface grafica).

Aplicação JavaFX 8 é aderente ao padrão arquitetural MVC. 
A Classe Controller: 
- recebe os dados e ações da GUI, 
- forma a lista de gráficos em função das especificações do usuário
- Instancia o Dataset
- Instancia um objeto Dashboard, agregando a lista de gráficos, o Dataset, as informações de Título e caminho do diretório destino, executar o motor de composição e a geração do arquivo ZIP.

Darei destaque às complexidades e atipicidades 

A classe Dataset: Processa o arquivo CSV  para obter:
- A lista de atributos (devem estar especificados na primeira linha do arquivo);
- rotina que por força bruta identificasse quais atributos do arquivo CSV eram compostos de valores numéricos. Sem isso, seria impossível aplicar a redução por somatória. (Citar ou demonstrar com slide os métodos isNumeric() e discoverColumnType() )

A classe Gerador é a responsável por lidar com a composição do artefato de saída usando FreeMarker.
- Ajusta o modelo de  dados a serem passados para o motor de composição;
- processa o gabarito com suas iterações de coleção, 
- comparações lógicas e substituições de marcações simples,
- Gera o arquivo dashboard.html no diretório de destino.


O gabarito foi desenvolvido voltado a gerar a apresentação do Dashboard em navegadores web.  Portanto foi criado em HTML5 com CSS3 para formatação e utilizando-se da biblioteca DC.js, sendo esta responsável por, a partir das suas dependências (crossfilter e D3), gerar os gráficos e aplicar os filtros dinâmicos.(demonstrar trechos com #IF e #list)

Por fim, A classe PackSaida:

- Copiar o conteúdo do diretório boilerplate (dependências do dashboard)
- Compactar o conteúdo do diretório destino em um arquivo de nome dashgen.zip.


(Se houver tempo, fazer uma execução da aplicação para a banca, utilizando um CSV, preferencialmente o mesmo do trabalho escrito (teste_salario.csv))

Agradecimentos e Resposta a questionamentos da banca.


